---
title: "raster_stack_richness"
author: "Gabriela Centeno y Sofía Zorrilla"
format: html
knitr:
  opts_knit:
    root.dir: "../../"
---

Load libraries
```{r}
library(data.table)
library(here)
library(sf)       
library(raster)   
library(terra)  
library(dplyr) 
library(rnaturalearth)

```


Load points and mexico map
```{r}
hgbif <- fread(here::here("data/in/hgbif_completo_iucn.csv"))

# Obtener el mapa de México con rnaturalearth
mexico_map <- ne_countries(scale = "large", returnclass = "sf", country = "Mexico")
```


Convert points to a list of species and into a sf object
```{r}
# Split dataframe by species
species_list <- split(hgbif, hgbif$correctname)


# Convert species occurrence data into sf object
species_sf_list <- lapply(species_list, function(df) {
  st_as_sf(df, coords = c("X", "Y"), crs = 4326)
})

```

Create the raster
```{r}
#Function to generate a map base for the richness (all the values of the map = 0)
get_base_raster <- function(base_vector, resolution){
  
  #Definir raster usando extent de mexico y resolucion 
  cuadricula<- rast(ext=base_vector, res=resolution)
  
  #Rasterizar poligono con base en a la cuadricula
  base <- rasterize(base_vector,cuadricula)
  
  #Cambiar valores del poligono a 0
  base[base == 1] <- 0
  
  return(base)
}

#Function to generate a raster that indicates the presence/absence of a set of registers(points)

get_distribution_raster <- function(base_raster, points){
  
  #Rasterizar puntos de presencia 
  points_raster<-rasterize(points,base_raster)

  #Convertir valores de presencia en 1
  base_raster[!is.na(points_raster)] <- 1
  
  return(base_raster)
}

#Generate an empty list to fill it with the next loop
sp_list <- list()

#Loop to run the function that generates the raster of presence/abscence
for(i in seq_along(species_sf_list)){
  sp_list[[i]] <- get_distribution_raster(base_raster = base_mx, points = species_sf_list[[i]])
}

#The names of the list generated equals to the records list
names(sp_list) <- names(species_sf_list)

#Check if the function worked
# plot(sp_list[[5]])

#Make an stack of the rasters
stack <- rast(sp_list)
nlyr(stack)

#save the raster
writeRaster(stack,here::here("data/out/raster_species/ras_species_res_0.5.tif"))
```


